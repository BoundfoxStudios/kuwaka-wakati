name: publish

on:
  push:
    branches:
      - main

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release-id: ${{ steps.create-release.outputs.result }}
      version-with-prefix: ${{ steps.get-next-version.outputs.new-release-version }}
      version: ${{ steps.version-without-prefix.outputs.version }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install
      - run: npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Remove "v" from version
        id: version-without-prefix
        if: matrix.platform == 'windows-latest'
        run: |
          VERSION=${{ needs.create-release.outputs.version }}
          VERSION=${VERSION//v} # replace all dots
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - name: get version
        run: echo "PACKAGE_VERSION=${{ steps.version-without-prefix.outputs.version }}" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `Kuwaka Wakati v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: update package.json with current version
        uses: jaywcjlove/github-action-package@main
        with:
          version: ${{ steps.create-release.outputs.version }}
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: npm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSPHRASE }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_TEAM_NAME }}
          APPLE_ID: ${{ secrets.APPLE_NOTARIZATION_USERNAME }}
          APPLE_PASSWORD: ${{ secrets.APPLE_NOTARIZATION_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release-id }}
          tagName: ${{ needs.create-release.outputs.version-with-prefix }}
      - uses: actions/upload-artifact@v3
        with:
          name: apps
          path: |
            src-tauri/target/release/

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    needs: [ create-release, build-tauri ]

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: apps
      - name: read signatures
        id: signatures
        run: |
          LINUX=$(cat appimage/kuwaka-wakati_${{ needs.create-release.outputs.version }}_amd64.AppImage.tar.gz.sig)
          DARWIN=$(cat "macos/Kuwaka Wakati.app.tar.gz.sig")
          WINDOWS=$(cat "Kuwaka Wakati_${{ needs.create-release.outputs.version }}_x64_en-US.msi.zip.sig")
          echo "linux=$LINUX" >> "$GITHUB_OUTPUT"
          echo "darwin=$DARWIN" >> "$GITHUB_OUTPUT"
          echo "windows=$WINDOWS" >> "$GITHUB_OUTPUT"
      - run: npx semantic-release
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cat <<EOT>> update.json
          {
            "version": "${{ needs.create-release.outputs.version }}",
            "notes": "For changelog, please visit the GitHub page",
            "pub_date": "",
            "platforms": {
              "darwin-aarch64": {
                "signature": "${{ steps.signatures.outputs.darwin }}"
                "url": "https://github.com/boundfoxstudios/kuwaka-wakati/releases/download/${{ needs.create-release.outputs.version }}/Kuwaka%20Wakati.app.tar.gz"
              },
              "linux-x86_64": {
                "signature": "${{ steps.signatures.outputs.linux }}"
                "url": "https://github.com/boundfoxstudios/kuwaka-wakati/releases/download/${{ needs.create-release.outputs.version }}/kuwaka-wakati_${{ needs.create-release.outputs.version }}_amd64.AppImage.tar.gz"
              },
              "windows-x86_64": {
                "signature": "${{ steps.signatures.outputs.windows }}"
                "url": "https://github.com/boundfoxstudios/kuwaka-wakati/releases/download/${{ needs.create-release.outputs.version }}/Kuwaka%20Wakati_${{ needs.create-release.outputs.version }}_x64_en-US.msi.zip"
              }
            }
          }
          EOT
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
      - name: Deploy update.json to Gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.TOKEN }}
          gist_id: c65aab8be88bbbb49f82b1d060e26e52
          file_path: update.json
